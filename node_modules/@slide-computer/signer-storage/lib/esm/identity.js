import { ECDSAKeyIdentity, Ed25519KeyIdentity } from "@dfinity/identity";
export const getIdentity = async (key, storage) => {
    const value = await storage.get(`identity-${key}`);
    if (!value) {
        return;
    }
    return typeof value === "string"
        ? Ed25519KeyIdentity.fromJSON(value)
        : ECDSAKeyIdentity.fromKeyPair(value);
};
export const setIdentity = async (key, identity, storage) => {
    const value = identity instanceof Ed25519KeyIdentity
        ? JSON.stringify(identity.toJSON())
        : identity.getKeyPair();
    return storage.set(`identity-${key}`, value);
};
export const removeIdentity = async (key, storage) => {
    return storage.remove(`identity-${key}`);
};
//# sourceMappingURL=identity.js.map