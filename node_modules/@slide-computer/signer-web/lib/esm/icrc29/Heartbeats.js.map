{"version":3,"file":"heartbeats.js","sourceRoot":"","sources":["../../../src/icrc29/heartbeats.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAY3D,MAAM,OAAO,SAAS;IAKpB,YAAY,OAAyB;;QAJ5B,qCAAqC;QACrC,+CAAmD;QAC5D,0CAA6C;QAG3C,uBAAA,IAAI,sCACF,MAAM,EAAE,UAAU,CAAC,MAAM,EACzB,MAAM,EAAE,UAAU,CAAC,MAAM,IACtB,OAAO,OACX,CAAC;QACF,uBAAA,IAAI,2BAAiB,UAAU,CAC7B,uBAAA,IAAI,uDAAgB,EACpB,uBAAA,IAAI,0BAAS,CAAC,YAAY,CAC3B,MAAA,CAAC;QACF,uBAAA,IAAI,gCAAsB,WAAW,CAAC,GAAG,EAAE;YACzC,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;YAC/B,uBAAA,IAAI,6DAAsB,MAA1B,IAAI,EAAuB,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAA,IAAI,wDAAiB,CAAC,CAAC;YAC3D,uBAAA,IAAI,0DAAmB,MAAvB,IAAI,EAAoB,EAAE,CAAC,CAAC;QAC9B,CAAC,EAAE,uBAAA,IAAI,0BAAS,CAAC,WAAW,CAAC,MAAA,CAAC;IAChC,CAAC;IAED,IAAI,YAAY,CAAC,KAAa;QAC5B,uBAAA,IAAI,0BAAS,CAAC,YAAY,GAAG,KAAK,CAAC;IACrC,CAAC;CAwCF;4OAtCuB,EAAU;IAC9B,OAAO,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,EAAE;QACrC,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;YACvC,IACE,CAAC,KAAK,CAAC,MAAM,KAAK,uBAAA,IAAI,0BAAS,CAAC,YAAY;gBAC1C,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC;gBAC7B,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC;gBACvB,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,EACzD,CAAC;gBACD,uBAAA,IAAI,0BAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAC9D,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACxB,CAAC;QACH,CAAC,CAAC;QACF,uBAAA,IAAI,0BAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC,mEAEgB,MAAc;IAC7B,YAAY,CAAC,uBAAA,IAAI,+BAAc,CAAC,CAAC;IACjC,uBAAA,IAAI,2BAAiB,UAAU,CAC7B,uBAAA,IAAI,uDAAgB,EACpB,uBAAA,IAAI,0BAAS,CAAC,YAAY,CAC3B,MAAA,CAAC;IAEF,uBAAA,IAAI,0BAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AACxC,CAAC;IAGC,aAAa,CAAC,uBAAA,IAAI,oCAAmB,CAAC,CAAC;IACvC,uBAAA,IAAI,0BAAS,CAAC,cAAc,EAAE,CAAC;AACjC,CAAC,uEAEkB,EAAU;IAC3B,uBAAA,IAAI,0BAAS,CAAC,YAAY,CAAC,WAAW,CACpC,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,EAC/C,GAAG,CACJ,CAAC;AACJ,CAAC","sourcesContent":["import { isJsonRpcResponse } from \"@slide-computer/signer\";\n\ninterface HeartbeatOptions {\n  signerWindow: Window;\n  onReadyResponse: (origin: string) => void;\n  readyTimeout: number;\n  onReadyTimeout: () => void;\n  pollingRate: number;\n  window?: Window;\n  crypto?: Pick<Crypto, \"randomUUID\">;\n}\n\nexport class Heartbeat {\n  readonly #options: Required<HeartbeatOptions>;\n  readonly #heartbeatInterval: ReturnType<typeof setInterval>;\n  #readyTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(options: HeartbeatOptions) {\n    this.#options = {\n      window: globalThis.window,\n      crypto: globalThis.crypto,\n      ...options,\n    };\n    this.#readyTimeout = setTimeout(\n      this.#onReadyTimeout,\n      this.#options.readyTimeout,\n    );\n    this.#heartbeatInterval = setInterval(() => {\n      const id = crypto.randomUUID();\n      this.#waitForReadyResponse(id).then(this.#onReadyResponse);\n      this.#sendStatusMessage(id);\n    }, this.#options.pollingRate);\n  }\n\n  set readyTimeout(value: number) {\n    this.#options.readyTimeout = value;\n  }\n\n  #waitForReadyResponse(id: string): Promise<string> {\n    return new Promise<string>((resolve) => {\n      const listener = (event: MessageEvent) => {\n        if (\n          (event.source === this.#options.signerWindow &&\n            isJsonRpcResponse(event.data) &&\n            event.data.id === id) ||\n          (\"result\" in event.data && event.data.result === \"ready\")\n        ) {\n          this.#options.window.removeEventListener(\"message\", listener);\n          resolve(event.origin);\n        }\n      };\n      this.#options.window.addEventListener(\"message\", listener);\n    });\n  }\n\n  #onReadyResponse(origin: string) {\n    clearTimeout(this.#readyTimeout);\n    this.#readyTimeout = setTimeout(\n      this.#onReadyTimeout,\n      this.#options.readyTimeout,\n    );\n\n    this.#options.onReadyResponse(origin);\n  }\n\n  #onReadyTimeout() {\n    clearInterval(this.#heartbeatInterval);\n    this.#options.onReadyTimeout();\n  }\n\n  #sendStatusMessage(id: string): void {\n    this.#options.signerWindow.postMessage(\n      { jsonrpc: \"2.0\", id, method: \"icrc29_status\" },\n      \"*\",\n    );\n  }\n}\n"]}