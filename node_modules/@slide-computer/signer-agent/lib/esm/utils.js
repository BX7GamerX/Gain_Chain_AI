import { Cbor, Expiry, } from "@dfinity/agent";
import { Principal } from "@dfinity/principal";
import { BigNumber } from "bignumber.js";
export const decodeCallRequest = (contentMap) => {
    const decoded = Cbor.decode(contentMap);
    const expiry = new Expiry(0);
    // @ts-ignore Expiry class currently has no method to create instance from value
    expiry._value = BigInt(decoded.ingress_expiry.toString(10));
    return Object.assign(Object.assign({}, decoded), { canister_id: Principal.from(decoded.canister_id), ingress_expiry: expiry });
};
export const requestIdFromReadStateOptions = (options) => {
    if (options.paths.length === 1 && options.paths[0].length == 2) {
        const path = new TextDecoder().decode(options.paths[0][0]);
        if (path === "request_status") {
            return options.paths[0][1];
        }
    }
    throw Error("Request id could not be found in options");
};
export const requestIdToReadStateOptions = (requestId) => ({
    paths: [[new TextEncoder().encode("request_status"), requestId]],
});
//# sourceMappingURL=utils.js.map