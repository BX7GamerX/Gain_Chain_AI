{"version":3,"file":"delegation.js","sourceRoot":"","sources":["../../../src/icrc34/delegation.ts"],"names":[],"mappings":";;;AAmBO,MAAM,+BAA+B,GAAG,CAAC,MAE/C,EAA6B,EAAE;;IAAC,OAAA,CAAC;QAChC,MAAM,EAAE,mBAAmB;QAC3B,OAAO,EAAE,MAAA,MAAM,CAAC,OAAO,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;KAChD,CAAC,CAAA;CAAA,CAAC;AALU,QAAA,+BAA+B,mCAKzC","sourcesContent":["import type { PermissionScope } from \"../icrc25\";\nimport type { JsonRequest, JsonResponse } from \"../transport\";\nimport { Principal } from \"@dfinity/principal\";\n\nexport type DelegationPermissionScope = PermissionScope<\"icrc34_delegation\"> & {\n  targets?: string[];\n};\n\nexport type Delegation = {\n  pubkey: string;\n  expiration: string;\n  targets?: string[];\n};\n\nexport type SignerDelegation = {\n  delegation: Delegation;\n  signature: string;\n};\n\nexport const createDelegationPermissionScope = (params: {\n  targets?: Principal[];\n}): DelegationPermissionScope => ({\n  method: \"icrc34_delegation\",\n  targets: params.targets?.map((p) => p.toText()),\n});\n\nexport type DelegationRequest = JsonRequest<\n  \"icrc34_delegation\",\n  {\n    publicKey: string;\n    targets?: string[];\n    maxTimeToLive?: string;\n  }\n>;\n\nexport type DelegationResponse = JsonResponse<{\n  publicKey: string;\n  signerDelegation: SignerDelegation[];\n}>;\n"]}