import { type Channel, type JsonRequest, type JsonResponse } from "@slide-computer/signer";
import type { ProviderDetail } from "./types";
export interface BrowserExtensionChannelOptions {
    /**
     * Provider details received during browser extension discovery
     */
    providerDetail: ProviderDetail;
    /**
     * Relying party window, used to listen for incoming events
     * @default globalThis.window
     */
    window?: Window;
}
export declare class BrowserExtensionChannel implements Channel {
    #private;
    constructor(options: BrowserExtensionChannelOptions);
    get closed(): boolean;
    addEventListener(...[event, listener]: [event: "close", listener: () => void] | [event: "response", listener: (response: JsonResponse) => void]): () => void;
    send(request: JsonRequest): Promise<void>;
    close(): Promise<void>;
}
