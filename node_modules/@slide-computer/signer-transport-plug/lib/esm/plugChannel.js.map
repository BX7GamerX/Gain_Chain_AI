{"version":3,"file":"plugChannel.js","sourceRoot":"","sources":["../../src/plugChannel.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAIN,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAErD,MAAM,OAAO,WAAW;IAAxB;QACW,sCAAkB,IAAI,GAAG,EAAc,EAAC;QACxC,yCAAqB,IAAI,GAAG,EAAoC,EAAC;IAkD5E,CAAC;IAhDC,IAAI,MAAM;QACR,OAAO,CACL,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;YACjB,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ;YAC7B,CAAC,MAAM,CAAC,EAAE;YACV,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,CAAC;YACtB,OAAO,MAAM,CAAC,EAAE,CAAC,IAAI,KAAK,QAAQ;YAClC,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI;YACf,CAAC,CAAC,SAAS,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;YAC9B,OAAO,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,UAAU,CAC7C,CAAC;IACJ,CAAC;IAED,gBAAgB,CACd,GAAG,CAAC,KAAK,EAAE,QAAQ,CAEgD;QAEnE,QAAQ,KAAK,EAAE,CAAC;YACd,KAAK,OAAO;gBACV,uBAAA,IAAI,mCAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACnC,OAAO,GAAG,EAAE;oBACV,uBAAA,IAAI,mCAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC,CAAC;YACJ,KAAK,UAAU;gBACb,uBAAA,IAAI,sCAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtC,OAAO,GAAG,EAAE;oBACV,uBAAA,IAAI,sCAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC3C,CAAC,CAAC;QACN,CAAC;IACH,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAoB;QAC7B,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,MAAM,IAAI,kBAAkB,CAAC,6BAA6B,CAAC,CAAC;QAC9D,CAAC;QAED,qCAAqC;QACrC,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEvD,0CAA0C;QAC1C,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS;YAAE,OAAO;QAErC,+BAA+B;QAC/B,uBAAA,IAAI,sCAAmB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,KAAK,KAAmB,CAAC;CAChC","sourcesContent":["import {\n  type Channel,\n  type JsonRequest,\n  type JsonResponse,\n} from \"@slide-computer/signer\";\nimport { PlugTransportError } from \"./plugTransport\";\n\nexport class PlugChannel implements Channel {\n  readonly #closeListeners = new Set<() => void>();\n  readonly #responseListeners = new Set<(response: JsonResponse) => void>();\n\n  get closed(): boolean {\n    return (\n      !(\"ic\" in window) ||\n      typeof window.ic !== \"object\" ||\n      !window.ic ||\n      !(\"plug\" in window.ic) ||\n      typeof window.ic.plug !== \"object\" ||\n      !window.ic.plug ||\n      !(\"request\" in window.ic.plug) ||\n      typeof window.ic.plug.request !== \"function\"\n    );\n  }\n\n  addEventListener(\n    ...[event, listener]:\n      | [event: \"close\", listener: () => void]\n      | [event: \"response\", listener: (response: JsonResponse) => void]\n  ): () => void {\n    switch (event) {\n      case \"close\":\n        this.#closeListeners.add(listener);\n        return () => {\n          this.#closeListeners.delete(listener);\n        };\n      case \"response\":\n        this.#responseListeners.add(listener);\n        return () => {\n          this.#responseListeners.delete(listener);\n        };\n    }\n  }\n\n  async send(request: JsonRequest): Promise<void> {\n    if (this.closed) {\n      throw new PlugTransportError(\"Plug wallet cannot be found\");\n    }\n\n    // @ts-ignore Call plug window method\n    const response = await window.ic.plug.request(request);\n\n    // One way messages, don't have a response\n    if (request.id === undefined) return;\n\n    // Call listeners with response\n    this.#responseListeners.forEach((listener) => listener(response));\n  }\n\n  async close(): Promise<void> {}\n}\n"]}