import { Signer, Transport } from "@slide-computer/signer";
import { SignerConfig } from "../../../lib/types";
import { TransportBuilderRequest } from "../../../lib/service/transport-builder/transport.builder";
export declare function useProceedSigner({ signers, closeModal, crypto, window, transportOptions, }: {
    signers: SignerConfig[];
    closeModal: () => unknown;
    crypto?: Pick<Crypto, "getRandomValues" | "randomUUID">;
    window?: Window;
    transportOptions: Pick<TransportBuilderRequest, "maxTimeToLive" | "derivationOrigin" | "allowInternetIdentityPinAuthentication" | "keyType" | "identity" | "storage">;
}): {
    selectSigner: (signerId?: string) => Promise<void | SignerConfig>;
    setSelectedSignerToLocalStorage: () => void;
    clearSigner: () => Promise<void | SignerConfig>;
    selectCustomSigner: (url: string) => Promise<void>;
    selectedSigner: Signer<Transport> | undefined;
    localStorageSigner: string | undefined;
};
